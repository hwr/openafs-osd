/*
 * Copyright (c) 2011, Hartmut Reuter,
 * RZG, Max-Planck-Institut f. Plasmaphysik.
 * All Rights Reserved.
 *
 */

/*
 * vicedosd.xg:
 *	Definition of the AFS File Server RPC interface extensions for AFS/OSD.
 */

%#include "afs/afsint.h"

%#define VICEDOSD_SERVICE 2

/* prototype for pseudo-RPC call */
%char *RXAFSOSD_TranslateOpCode(afs_int32 code);

package RXAFSOSD_
prefix S
statindex 7

/***************************************************************
 * Used by the cache manager if it suspects that the OSD couldnt decrypt 
 * the osdRock because the rx-connection between FS and rxosd had been reaped */

CheckOSDconns() = 1;

/***************************************************************
 * Used by the cache manager before storing a file when the fileserver
 * had indicated the file could possibly be stored in object storage. */

ApplyOsdPolicy(
  IN AFSFid *Fid,
  IN afs_uint64 length,
  OUT afs_uint32 *protocol
) = 2;

/***************************************************************
 * Called by 'fs osd' or 'fs fidosd' to get see the osd metadata 
 * stored in the volume for a file in object storage. */

GetOsdMetadata(
  IN AFSFid *Fid
) split = 3;

/***************************************************************
 * Called by cache mamager on clients with visible fileserver partitions
 * and enabled vicep-access to get the path of a file inside the partition. */

GetPath(
  IN  AFSFid *Fid,
  INOUT struct async *a
) = 4;

/***************************************************************
 * Called by rxosd after copy on write to inform fileserver about
 * new tag of an object */

UpdateOSDmetadata(
  IN struct ometa *old,
  IN struct ometa *new
) = 5;

/***************************************************************
 * Called by archival rxosds after restore of a file from HSM to 
 * object storage to update the metadata and to check the md5-checksum. */

SetOsdFileReady(
  IN AFSFid *Fid,
  IN struct cksum *checksum
) = 6;

/***************************************************************
 * Called by clients to bring wiped files on-line. Either during 
 * open or by a prefetch command. */

BringOnline(
  IN AFSFid *Fid,
  OUT AFSFetchStatus *OutStatus,
  AFSCallBack *CallBack
) = 7;

/***************************************************************
 * Called by clients to start a fetch operation for a file either in
 * object storage or/and in a visible partition. */

StartAsyncFetch(
  IN AFSFid *Fid,
  IN RWparm *p,
  INOUT struct async *a,
  OUT afs_uint64 *transId,
  OUT afs_uint32 *expires,
  OUT AFSFetchStatus *OutStatus,
  OUT AFSCallBack *CallBack
) = 8;

ExtendAsyncFetch(
  IN AFSFid *fid,
  IN afs_uint64 transId,
  OUT afs_uint32 *expires
) = 9;

EndAsyncFetch(
  IN AFSFid *fid,
  IN afs_uint64 transId,
  IN afs_uint64 bytes_sent,
  IN afs_uint32 osd
) = 10;

StartAsyncStore(
  IN AFSFid *Fid,
  IN struct RWparm *p,
  INOUT struct async *a,
  OUT afs_uint64 *maxlength,
  OUT afs_uint64 *transid,
  OUT afs_uint32 *expires,
  OUT AFSFetchStatus *OutStatus
) = 11;

ExtendAsyncStore(
  IN AFSFid *Fid,
  IN afs_uint64 transid,
  OUT afs_uint32 *expires
) = 12;

EndAsyncStore(
  IN AFSFid *Fid,
  IN afs_uint64 transid,
  IN afs_uint64 filelength,
  IN afs_uint64 bytes_rcvd,
  IN afs_uint64 bytes_sent,
  IN afs_uint32 osd,
  IN afs_int32 error,
  IN struct asyncError *ae,
  IN struct AFSStoreStatus *Instatus,
  OUT struct AFSFetchStatus *OutStatus
) = 13;
