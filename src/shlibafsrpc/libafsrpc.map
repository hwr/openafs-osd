# Copyright 2000, International Business Machines Corporation and others.
# All Rights Reserved.
# 
# This software has been released under the terms of the IBM Public
# License.  For details, see the LICENSE file in the top-level source
# directory or online at http://www.openafs.org/dl/license10.html

{
    global:
	des_check_key_parity;
	des_fixup_key_parity;
	des_init_random_number_generator;
	des_is_weak_key;
	des_key_sched;
	des_random_key;
	des_string_to_key;
	des_cbc_cksum;
	des_ecb_encrypt;
	des_pcbc_encrypt;
	ktohl;
	life_to_time;
	osi_AssertFailU;
	osi_Panic;
	rx_DestroyConnection;
	rx_EndCall;
	rx_Finalize;
	rx_GetCachedConnection;
	rx_GetCall;
	rx_GetIFInfo;
	rx_GetSpecific;
	rx_Init;
	rx_InitHost;
	rx_KeyCreate;
	rx_NewCall;
	rx_NewConnection;
	rx_NewService;
	rx_PrintPeerStats;
	rx_PrintStats;
	rx_PrintTheseStats;
	rx_ReadProc;
	rx_ReleaseCachedConnection;
	rx_ServerProc;
	rx_SetSpecific;
	rx_StartServer;
	rx_WriteProc;
	rxevent_Init;
	rxevent_Post;
	rxkad_GetServerInfo;
	rxkad_NewClientSecurityObject;
	rxkad_NewServerSecurityObject;
	rxkad_SetAltDecryptProc;
	rxnull_NewClientSecurityObject;
	rxnull_NewServerSecurityObject;
	rxs_Release;
	time_to_life;
	tkt_CheckTimes;
	tkt_DecodeTicket;
	tkt_DeriveDesKey;
	tkt_MakeTicket;
	xdrrx_create;
	hton_syserr_conv;
	rxkad_global_stats;
	rxkad_global_stats_lock;
	rxkad_stats_key;
	afs_com_err;
	afs_error_message;
	afs_error_table_name;
	rx_socket;
	rxevent_debugFile;
	rx_debugFile;
	rx_connDeadTime;
	rx_maxReceiveSize;
	rx_UdpBufSize;
	rx_extraQuota;
	rx_extraPackets;
	rx_tranquil;
	rx_getAllAddr;
	rx_nWaiting;
	rx_stats;
	rx_SetNoJumbo;
	rx_SetConnDeadTime;
	rx_SetConnHardDeadTime;
	rx_SetConnIdleDeadTime;
	rx_FlushWrite;
	rx_thread_id_key;
	multi_Finalize;
	multi_Select;
	multi_Init;
	multi_Finalize_Ignore;
	afs_add_to_error_table;
	xdr_afsUUID;
	xdr_afs_int32;
	xdr_afs_uint32;
	xdr_afs_int64;
	xdr_afs_uint64;
	rx_IncrementTimeAndCount;
	rx_enable_stats;
	rx_GetServerDebug;
	rx_GetServerStats;
	rx_GetServerVersion;
	rx_GetServerConnections;
	rx_stats_mutex;
	rx_GetServerPeers;
	rx_RetrieveProcessRPCStats;
	rx_RetrievePeerRPCStats;
	rx_FreeRPCStats;
	rx_queryProcessRPCStats;
	rx_queryPeerRPCStats;
	rx_enableProcessRPCStats;
	rx_enablePeerRPCStats;
	rx_disableProcessRPCStats;
	rx_disablePeerRPCStats;
	RXSTATS_ExecuteRequest;
	RXSTATS_RetrieveProcessRPCStats;
	RXSTATS_RetrievePeerRPCStats;
	RXSTATS_QueryProcessRPCStats;
	RXSTATS_QueryPeerRPCStats;
	RXSTATS_EnableProcessRPCStats;
	RXSTATS_EnablePeerRPCStats;
	RXSTATS_DisableProcessRPCStats;
	RXSTATS_DisablePeerRPCStats;
	RXSTATS_QueryRPCStatsVersion;
	RXSTATS_ClearProcessRPCStats;
	RXSTATS_ClearPeerRPCStats;
	TM_GetTimeOfDay;
	FT_GetTimeOfDay;
	strcompose;
	stolower;
	ucstring;
	lcstring;
	AssertionFailed;
	rx_GetLocalPeers;
	rx_GetMaxReceiveWindow;
	rx_GetMaxSendWindow;
	rx_SetMaxReceiveWindow;
	rx_SetMaxSendWindow;
	rx_GetMinPeerTimeout;
	rx_SetMinPeerTimeout;
	afs_xdr_alloc;
	afs_xdr_array;
	afs_xdr_bytes;
	afs_xdr_char;
	afs_xdr_u_char;
	afs_xdr_free;
	afs_xdr_int;
	afs_xdr_opaque;
	afs_xdr_pointer;
	afs_xdr_short;
	afs_xdr_string;
	afs_xdr_vector;
	rx_InterruptCall;
	rx_SetBusyChannelError;
	rx_KeepAliveOn;
	rx_KeepAliveOff;
	_rxkad_v5_encode_EncTicketPart;
	_rxkad_v5_encode_Ticket;
	_rxkad_v5_length_EncTicketPart;
	_rxkad_v5_length_Ticket;
    local:
	*;
};
